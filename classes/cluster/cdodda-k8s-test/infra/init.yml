classes:
- system.defaults
- system.linux.system.single
- system.linux.system.single.debian
- system.linux.network.dynamic_hosts
- system.salt.minion.single
- system.openssh.server.team.qa_scale
- system.openssh.server.team.oscore_devops
- system.openssh.server.team.networking
- system.openssh.server.team.tcpcloud
- system.openssh.server.team.stacklight
- system.openssh.server.team.k8s_team
- system.openssh.server.team.drivetrain
- system.openssh.server.team.storage
- system.rsyslog.client.single
- system.auditd.server.ciscat
- cluster.cdodda-k8s-test.kubernetes
#- cluster.cdodda-k8s-test.infra.proxy
- cluster.cdodda-k8s-test.infra.apt_repos
- cluster.cdodda-k8s-test.infra.secrets
parameters:
  _param:
    # Don't set it "false" before you configure sudo policies and enable power users.
    linux_system_user_sudo: true

    apt_mk_version: 2018.11.0
    # TODO: Revert openstack repo part after refactoring here: https://mirantis.jira.com/browse/PROD-17500
    openstack_version: pike
    jenkins_pipelines_branch: '${_param:apt_mk_version}'
    #salt_control_trusty_image: http://images.mirantis.com/ubuntu-14-04-x64-mcp${_param:apt_mk_version}.qcow2
    #salt_control_xenial_image: http://images.mirantis.com/ubuntu-16-04-x64-mcp${_param:apt_mk_version}.qcow2 
    mcp_docker_registry: "docker-prod-local.artifactory.mirantis.com"
    infra_config_hostname: cfg01
    salt_minion_ca_host: ${_param:infra_config_hostname}.${_param:cluster_domain}
    # infra service addresses
    infra_config_address: 10.11.0.15
    infra_config_deploy_address: 10.10.0.15

    cluster_domain: cdodda-k8s-test.local
    cluster_name: cdodda-k8s-test
    cluster_public_host: ${_param:infra_config_address}
    control_network_netmask: 255.255.0.0
    tenant_network_netmask: 255.255.0.0

    dns_server01: 172.18.176.6
    dns_server02: 172.17.44.91
    control_vlan: 10
    tenant_vlan: 20

    deploy_network_netmask: 255.255.0.0
    deploy_network_gateway: 10.10.0.1

    # MaaS parameters
    linux_dhcp_interface:
      enabled: true
      type: eth
      proto: dhcp
      mesh: deploy
    linux_single_interface:
      enabled: true
      type: eth
      proto: static
      address: ${_param:single_address}
      netmask: ${_param:control_network_netmask}
      name_servers:
        - ${_param:dns_server01}
        - ${_param:dns_server02}
      mesh: control

  salt:
    minion:
      trusted_ca_minions:
        - ${_param:salt_minion_ca_host}
  linux:
    network:
      dhclient:
        enabled: true
        request:
          - subnet-mask
          - broadcast-address
          - time-offset
          - routers
          - domain-name
          - domain-name-servers
          - domain-search
          - host-name
          - dhcp6.name-servers
          - dhcp6.domain-search
          - dhcp6.fqdn
          - dhcp6.sntp-servers
          - netbios-name-servers
          - netbios-scope
          - interface-mtu
          - rfc3442-classless-static-routes
      host:
        hostname:
          address: ${_param:single_address}
          names:
          - ${linux:network:hostname}
          - ${linux:network:fqdn}
        cfg01:
          address: ${_param:infra_config_address}
          names:
          - ${_param:infra_config_hostname}
          - ${_param:infra_config_hostname}.${_param:cluster_domain}
        cfg:
          address: ${_param:infra_config_address}
          names:
          - cfg
          - cfg.${_param:cluster_domain}
    system:
      name: ${_param:infra_config_hostname}
      domain: ${_param:cluster_domain}
      service:
        apt-daily.timer:
          status: dead
          enabled: false
        systemd-timesyncd:
          status: dead
          enabled: false
      package:
        python-msgpack:
          version: latest
        python-tornado:
          version: latest

